clc; clear all; close all;

M = 16; % M 越大會使 Autocorrelation 越趨近理想狀態
fm = 120;
T = 0.01;
s = 30000;
t = 0:0.001:30;
H = hadamard(M); % 產生 M*M 的 hadamard matrix
p = sqrt([0.092 0.231 0.115 0.046 0.051 0.025]); % typical urban 的 power delay profile

CLASS = zeros(2,30000);
GAUS1 = zeros(2,30000);
GAUS2 = zeros(2,30000);
CLASS1 = zeros(2,30000);
GAUS11 = zeros(2,30000);
GAUS21 = zeros(2,30000);
NORMALPOWER = zeros(1,6);

for k = 1:2
    for i = 1:s
        for n = 1:M
            beta_n = pi*n/(M+1);
            gamma_nk = 2*pi*(k-1)*n/17;
            fun1=beta_n+r;
            fun2=2*pi*n/(2*(2*16+1));            
            gk=2*sqrt(2)*H(k,n)*(cos(beta_n)+j*sin(beta_n))*cos(2*pi*fm*T*cos(fun2)*t(1,i)+fun1);
            CLASS(k,i)=gk+CLASS(k,i);
        end
    end
    g=sqrt(mean(CLASS(k,:).*conj(CLASS(k,:))));
    CLASS1(k,:)=(CLASS(k,:)/g)*p(k);
    NORMALPOWER(k)=mean(CLASS1(k,:).*conj(CLASS1(k,:)));
end

ACCLASS=autocorr(CLASS(2,:),4999);
figure;plot(ACCLASS);         
title('Autocorrelation-CLASS');
GCLASS=log10(abs(CLASS(2,:)));
figure;plot(GCLASS);  
title('Time-domain Fading Gain-CLASS');
PSDCLASS=fft([ACCLASS(1:3000),zeros(1,4999-3000)],4999);   
figure;plot(linspace(-1,1,length(PSDCLASS)),abs(PSDCLASS));  
title('Power Spectral Density-CLASS');

x=linspace(-1,1,16);
x(2:end-1) = x(2:end-1)+x(2:end-1).*unifrnd(-1,1,1,14)*1e-2;
A1=6.649*exp(-0.5*(x+0.8).^2/(0.05^2));
A2=0.6649*exp(-0.5*(x-0.4).^2/(0.1^2));
B1=A1+A2;

for k=3:4
    for i=1:s
        for n=1:16
            fun4=sqrt(B1(n))*exp(j*(2*pi*fm*x(n)*(t(i)+300)));
            GAUS1(1,i)=fun4+GAUS1(1,i);
        end
        g=sqrt(mean(GAUS1(1,:).*conj(GAUS1(1,:))));
        GAUS11(1,:)=(GAUS1(1,:)/g)*p(k);
        NORMALPOWER(k)=mean(GAUS11(1,:).*conj(GAUS11(1,:)));
    end
end

ACGAUS1=autocorr(GAUS1(1,:),1499);   
figure;plot(ACGAUS1(1:40));                
title('Autocorrelation-GAUS1');
GGAUS1=log10(abs(GAUS1(1,:)));
figure;plot(GGAUS1);         
title('Time-domain Fading Gain-GAUS1');
PSDGAUS1=fft([ACGAUS1(1:35),zeros(1,1500-35)],1500);    
figure;plot(linspace(-1,1,length(PSDGAUS1)),abs(fftshift(PSDGAUS1))); 
title('Power Spectral Density-GAUS1');

x=linspace(-1,1,16);
x(2:end-1) = x(2:end-1)+x(2:end-1).*unifrnd(-1,1,1,14)*1e-2;
A1=3.8*exp(-0.5*(x-0.7).^2/(0.1^2));
A2=(3.8/(10^1.5))*exp(-0.5*(x+0.4).^2/(0.15^2));
B2=A1+A2;
del=[0 30];

for k=5:6
    for i=1:s
        for n=1:16
            fun5=sqrt(B2(n))*exp(j*(2*pi*fm*x(n)*(t(i)+del(k-4))));
            GAUS2(k-4,i)=fun5+GAUS2(k-4,i);
        end
    end
    g=sqrt(mean(GAUS2(k-4,:).*conj(GAUS2(k-4,:))));
    GAUS21(k-4,:)=(GAUS2(k-4,:)/g)*p(k);
    NORMALPOWER(k)=mean(GAUS21(k-4,:).*conj(GAUS21(k-4,:)));
end

ACGAUS2=autocorr(GAUS2(2,:),2099);  
figure;plot(ACGAUS2(1:40));                
title('Autocorrelation-GAUS2');
GGAUS2=log10(abs(GAUS2(2,:)));
figure;plot(GGAUS2);             
title('Time-domain Fading Gain-GAUS2');
PSDGAUS2=fft([ACGAUS2(1:35),zeros(1,2100-35)],2100);       
figure;plot(linspace(-1,1,length(PSDGAUS2)),abs(fftshift(PSDGAUS2))); 
title('Power Spectral Density-GAUS2');

Delay=[0 0.3 0.8 1.3 2.3 5];
i=1:6;
figure;stem(Delay(i),NORMALPOWER(i));
title('Typical Urban(TU)(6-rays)');